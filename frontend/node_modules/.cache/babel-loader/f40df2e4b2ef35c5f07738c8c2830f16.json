{"ast":null,"code":"var _jsxFileName = \"/Users/niteshsingh/Desktop/Voimo/frontend/src/components/AudioWave.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/src/plugin/regions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioWaveform = _ref => {\n  _s();\n\n  let {\n    fileUrl,\n    setTime\n  } = _ref;\n  const waveformRef = useRef(null);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    const waveform = WaveSurfer.create({\n      container: waveformRef.current,\n      waveColor: \"hsl(51.24, 100%, 63.73%)\",\n      progressColor: \"hsl(51.24, 100%, 40%)\",\n      cursorColor: \"hsl(51.24, 100%, 40%)\",\n      barWidth: 2,\n      barHeight: 1,\n      barGap: null,\n      height: 100,\n      plugins: [RegionsPlugin.create({\n        dragSelection: true\n      })]\n    });\n    waveform.load(fileUrl);\n    const timer = waveformRef.current.appendChild(document.createElement(\"div\"));\n    timer.className = \"timer\";\n    timer.textContent = \"00:00\";\n    timerRef.current = timer;\n    const regionStartTime = waveformRef.current.appendChild(document.createElement(\"div\"));\n    regionStartTime.className = \"region-start-time\";\n    const regionEndTime = waveformRef.current.appendChild(document.createElement(\"div\"));\n    regionEndTime.className = \"region-end-time\";\n    regionStartTime.textContent = `Start Time: 0 s`;\n    waveform.on(\"ready\", () => {\n      // Update end time with duration of audio\n      regionEndTime.textContent = `End Time: ${waveform.getDuration().toFixed(2)} s`;\n      setTime([0, parseFloat(waveform.getDuration().toFixed(2))]);\n    });\n    const playPauseButton = waveformRef.current.appendChild(document.createElement(\"button\"));\n    playPauseButton.setAttribute(\"type\", \"button\");\n    playPauseButton.className = \"play-pause-button recording-btn\";\n    playPauseButton.textContent = \"Play\";\n    playPauseButton.addEventListener(\"click\", () => {\n      if (waveform.isPlaying()) {\n        waveform.pause();\n      } else {\n        const selectedRegion = waveform.regions.list[Object.keys(waveform.regions.list)[0]];\n\n        if (selectedRegion) {\n          const start = selectedRegion.start;\n          const end = selectedRegion.end;\n          waveform.play(start, end);\n        } else {\n          waveform.play();\n        }\n      }\n    });\n    waveform.on(\"region-update-end\", region => {\n      const start = region.start.toFixed(2);\n      const end = region.end.toFixed(2);\n      regionStartTime.textContent = `Start Time: ${start} s`;\n      regionEndTime.textContent = `End Time: ${end} s`;\n      setTime([parseFloat(start), parseFloat(end)]);\n      region.on(\"click\", () => {\n        waveform.clearRegions();\n        region.update({\n          color: \"hsla(246, 100%, 50%, 0.4)\"\n        });\n        regionStartTime.textContent = `Start Time: 0 s`;\n        regionEndTime.textContent = `End Time: ${waveform.getDuration().toFixed(2)} s`;\n        setTime([0, parseFloat(waveform.getDuration().toFixed(2))]);\n      });\n    });\n    waveform.on(\"finish\", () => {\n      playPauseButton.textContent = \"Play\";\n    });\n    waveform.on(\"pause\", () => {\n      playPauseButton.textContent = \"Play\";\n    });\n    waveform.on(\"play\", () => {\n      playPauseButton.textContent = \"Pause\";\n    });\n    waveform.on(\"audioprocess\", () => {\n      const currentTime = waveform.getCurrentTime();\n      const minutes = Math.floor(currentTime / 60);\n      const seconds = Math.floor(currentTime % 60).toString().padStart(2, \"0\");\n      timerRef.current.textContent = `${minutes}:${seconds}`;\n    });\n    return () => {\n      waveform.destroy();\n      timerRef.current.remove();\n      playPauseButton.remove();\n      waveformRef.current.innerHTML = \"\";\n    };\n  }, [fileUrl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: waveformRef,\n      style: {\n        'margin-top': '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AudioWaveform, \"SpIYUTeze92sEhur6ahl3C9KyZI=\");\n\n_c = AudioWaveform;\nexport default AudioWaveform;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioWaveform\");","map":{"version":3,"sources":["/Users/niteshsingh/Desktop/Voimo/frontend/src/components/AudioWave.js"],"names":["React","useEffect","useRef","WaveSurfer","RegionsPlugin","AudioWaveform","fileUrl","setTime","waveformRef","timerRef","waveform","create","container","current","waveColor","progressColor","cursorColor","barWidth","barHeight","barGap","height","plugins","dragSelection","load","timer","appendChild","document","createElement","className","textContent","regionStartTime","regionEndTime","on","getDuration","toFixed","parseFloat","playPauseButton","setAttribute","addEventListener","isPlaying","pause","selectedRegion","regions","list","Object","keys","start","end","play","region","clearRegions","update","color","currentTime","getCurrentTime","minutes","Math","floor","seconds","toString","padStart","destroy","remove","innerHTML"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/src/plugin/regions\";\n\nconst AudioWaveform = ({ fileUrl,setTime }) => {\n  const waveformRef = useRef(null);\n  const timerRef = useRef(null);\n\n  useEffect(() => {\n    const waveform = WaveSurfer.create({\n      container: waveformRef.current,\n      waveColor: \"hsl(51.24, 100%, 63.73%)\",\n      progressColor: \"hsl(51.24, 100%, 40%)\",\n      cursorColor: \"hsl(51.24, 100%, 40%)\",\n      barWidth: 2,\n      barHeight: 1,\n      barGap: null,\n      height: 100,\n      plugins: [\n        RegionsPlugin.create({\n          dragSelection: true,\n        }),\n      ],\n    });\n\n    waveform.load(fileUrl);\n\n    const timer = waveformRef.current.appendChild(\n      document.createElement(\"div\")\n    );\n    timer.className = \"timer\";\n    timer.textContent = \"00:00\";\n    timerRef.current = timer;\n\n    const regionStartTime = waveformRef.current.appendChild(\n      document.createElement(\"div\")\n    );\n    regionStartTime.className = \"region-start-time\";\n\n    const regionEndTime = waveformRef.current.appendChild(\n      document.createElement(\"div\")\n    );\n    regionEndTime.className = \"region-end-time\";\n    regionStartTime.textContent = `Start Time: 0 s`;\n    waveform.on(\"ready\", () => {\n        // Update end time with duration of audio\n        regionEndTime.textContent = `End Time: ${waveform\n          .getDuration()\n          .toFixed(2)} s`;\n          setTime([0,parseFloat(waveform.getDuration().toFixed(2))]);\n      });\n\n      const playPauseButton = waveformRef.current.appendChild(\n      document.createElement(\"button\")\n    );\n    playPauseButton.setAttribute(\"type\", \"button\");\n    playPauseButton.className = \"play-pause-button recording-btn\";\n    playPauseButton.textContent = \"Play\";\n    playPauseButton.addEventListener(\"click\", () => {\n      if (waveform.isPlaying()) {\n        waveform.pause();\n      } else {\n        const selectedRegion =\n          waveform.regions.list[Object.keys(waveform.regions.list)[0]];\n        if (selectedRegion) {\n          const start = selectedRegion.start;\n          const end = selectedRegion.end;\n          waveform.play(start, end);\n        } else {\n          waveform.play();\n        }\n      }\n    });\n\n    waveform.on(\"region-update-end\", (region) => {\n      const start = region.start.toFixed(2);\n      const end = region.end.toFixed(2);\n      regionStartTime.textContent = `Start Time: ${start} s`;\n      regionEndTime.textContent = `End Time: ${end} s`;\n        setTime([parseFloat(start),parseFloat(end)]);\n      region.on(\"click\", () => {\n        waveform.clearRegions();\n        region.update({ color: \"hsla(246, 100%, 50%, 0.4)\" });\n        regionStartTime.textContent = `Start Time: 0 s`;\n        regionEndTime.textContent = `End Time: ${waveform\n          .getDuration()\n          .toFixed(2)} s`;\n            setTime([0,parseFloat(waveform.getDuration().toFixed(2))]);\n      });\n    });\n\n    waveform.on(\"finish\", () => {\n      playPauseButton.textContent = \"Play\";\n    });\n\n    waveform.on(\"pause\", () => {\n      playPauseButton.textContent = \"Play\";\n    });\n    waveform.on(\"play\", () => {\n      playPauseButton.textContent = \"Pause\";\n    });\n    waveform.on(\"audioprocess\", () => {\n      const currentTime = waveform.getCurrentTime();\n      const minutes = Math.floor(currentTime / 60);\n      const seconds = Math.floor(currentTime % 60)\n        .toString()\n        .padStart(2, \"0\");\n      timerRef.current.textContent = `${minutes}:${seconds}`;\n    });\n\n    return () => {\n      waveform.destroy();\n      timerRef.current.remove();\n      playPauseButton.remove();\n      waveformRef.current.innerHTML = \"\";\n    };\n  }, [fileUrl]);\n\n  return (\n    <>\n      <div ref={waveformRef} style={{'margin-top':'1rem'}}></div>\n    </>\n  );\n};\n\nexport default AudioWaveform;\n"]},"metadata":{},"sourceType":"module"}