{"ast":null,"code":"var _jsxFileName = \"/Users/niteshsingh/Desktop/Voimo/frontend/src/pages/PrivateRoute.page.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  _s();\n\n  // Fetching the user from the user context.\n  const {\n    user\n  } = useContext(UserContext);\n  const location = useLocation(); // If the user is not logged in we are redirecting them\n  // to the login page. Otherwise we are letting them to\n  // continue to the page as per the URL using <Outlet />.\n\n  return user ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: `/login?redirectTo=${encodeURI(location.pathname)}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 30\n  }, this);\n};\n\n_s(PrivateRoute, \"M79qLDH95oiTF2KFpNG0BOxgtck=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/niteshsingh/Desktop/Voimo/frontend/src/pages/PrivateRoute.page.js"],"names":["useContext","Navigate","Outlet","useLocation","UserContext","PrivateRoute","props","user","location","encodeURI","pathname"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,UAAU,CAACI,WAAD,CAA3B;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B,CAJ8B,CAM9B;AACA;AACA;;AACA,SAAOI,IAAI,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAgB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,qBAAoBE,SAAS,CAACD,QAAQ,CAACE,QAAV,CAAoB;AAAhE;AAAA;AAAA;AAAA;AAAA,UAA3B;AACD,CAVD;;GAAML,Y;UAIaF,W;;;KAJbE,Y;AAYN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\n\nconst PrivateRoute = (props) => {\n\n  // Fetching the user from the user context.\n  const { user } = useContext(UserContext);\n  const location = useLocation();\n\n  // If the user is not logged in we are redirecting them\n  // to the login page. Otherwise we are letting them to\n  // continue to the page as per the URL using <Outlet />.\n  return user ? <Outlet /> : <Navigate to={`/login?redirectTo=${encodeURI(location.pathname)}`} />;\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}