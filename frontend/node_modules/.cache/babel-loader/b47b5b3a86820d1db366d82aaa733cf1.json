{"ast":null,"code":"var _jsxFileName = \"/Users/niteshsingh/Desktop/Voimo/frontend/src/pages/CameraPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./CameraPage.css\";\nimport Sidenav from \"./Sidenav\";\nimport { Backdrop } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport artist from \"../assests/Artists\";\nimport AudioWaveform from \"../components/AudioWave\";\nimport { bufferToWav, cropBuffer, urlToBuffer } from \"../assests/assist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CameraPage() {\n  _s();\n\n  const [theme, setTheme] = useState([]);\n  const [option, setOption] = useState(\"0\");\n  const [option1, setOption1] = useState(\"\");\n  const [upscale, setUpscale] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const audioInputRef = useRef(null);\n\n  const handleThemeClick = selectedTheme => {\n    if (theme.includes(selectedTheme)) setTheme(theme.filter(theme => theme !== selectedTheme));else setTheme(prev => [...prev, selectedTheme]);\n  };\n\n  const handleradioButton = option => {\n    setOption1(option);\n  };\n\n  const handleOptionSelect = event => {\n    const selectedOption = event.target.value;\n    setOption(selectedOption);\n  };\n\n  const handleUpscaleCheckbox = event => {\n    const checked = event.target.checked;\n    setUpscale(checked);\n  };\n\n  var myArray = artist; //audio recorder function\n\n  const [recording, setRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(null); // const [cropURL, setCroppedURL] = useState(null);\n\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordingButtonClass, setRecordingButtonClass] = useState(\"recording-button\");\n  const [time, setTime] = useState([0, 0]);\n  const chunks = [];\n\n  const startRecording = () => {\n    setAudioURL(null);\n    setRecordingButtonClass(\"recording-btn recording\");\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const recorder = new MediaRecorder(stream);\n      recorder.start();\n      setRecording(true);\n      setMediaRecorder(recorder);\n      recorder.addEventListener(\"dataavailable\", event => {\n        chunks.push(event.data);\n      });\n      recorder.addEventListener(\"stop\", () => {\n        const blob = new Blob(chunks);\n        const file = new File([blob], \"recording.wav\", {\n          type: \"audio/wav\"\n        }); // audioInputRef.current.files = [file];\n\n        const dataTransfer = new DataTransfer();\n        dataTransfer.items.add(file);\n        const fileList = dataTransfer.files;\n        audioInputRef.current.files = fileList;\n        const url = URL.createObjectURL(blob);\n        setAudioURL(url);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n    mediaRecorder.stop();\n    setRecordingButtonClass(\"recording-btn\");\n  };\n\n  const downloadAudio = () => {\n    const link = document.createElement(\"a\");\n    link.href = audioURL;\n    link.download = \"recording.wav\";\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    const url = URL.createObjectURL(file);\n    setAudioURL(url);\n  };\n\n  console.log(time);\n  const base_url = process.env.REACT_APP_API_URL;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // prevent the default form submission behavior\n\n    const formData = new FormData(event.target); // get the form data\n\n    const url = `${base_url}/submit_form`; // replace this with your URL\n\n    formData.delete(\"audio\");\n\n    try {\n      const buffer = await urlToBuffer(audioURL);\n      const croppedBuffer = cropBuffer(buffer, time[0], time[1]);\n      const wavBytes = bufferToWav(croppedBuffer);\n      const wav = new Blob([wavBytes], {\n        type: \"audio/wav\"\n      });\n      const audioTemp = new File([wav], \"my-audio-file.wav\", {\n        type: \"audio/wav\"\n      });\n      console.log(audioTemp);\n      formData.append(\"audio\", audioTemp, \"temp.wav\");\n      setLoading(true);\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: formData\n      });\n      const task = await response.json();\n      console.log(task);\n      const id = task.id;\n      console.log(id);\n      var refreshId = setInterval(async function () {\n        const url = `${base_url}/get_video/${id}`;\n\n        try {\n          const response = await fetch(url, {\n            method: \"POST\"\n          });\n          console.log(response);\n\n          for (var pair of response.headers.entries()) {\n            console.log(pair[0] + \": \" + pair[1]);\n\n            if (pair[1] === \"video/mp4\") {\n              // key I'm looking for in this instance\n              clearInterval(refreshId);\n              console.log(\"k\");\n              const filename = \"temp.mp4\";\n              const file = await response.blob();\n              const url = URL.createObjectURL(file);\n              const a = document.createElement(\"a\");\n              a.href = url;\n              a.download = filename;\n              document.body.appendChild(a);\n              a.click();\n              document.body.removeChild(a);\n              setLoading(false);\n            }\n          } // if (response.headers.get(\"content-disposition\")) {\n          //   console.log(\"hi\");\n          // }\n\n\n          console.log(\"Night\");\n        } catch (error) {\n          clearInterval(refreshId);\n          setLoading(false);\n          console.log(error);\n        }\n      }, 60000);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(loading);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidenav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n        open: loading,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: \"Create your own video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Record or Upload Audio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"optionsgg\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"audioOption\",\n                value: \"record\",\n                onClick: () => handleradioButton(\"record\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), \" \", \"Record\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"audioOption\",\n                value: \"upload\",\n                onClick: () => handleradioButton(\"upload\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), \" \", \"Upload\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), option1 === \"record\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"record\",\n                  children: \"Record Audio:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"audio\",\n                  name: \"audio\",\n                  accept: \"audio/*\",\n                  style: {\n                    display: \"none\"\n                  },\n                  ref: audioInputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: 0\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: downloadAudio,\n                    className: \"download-button\",\n                    type: \"button\",\n                    children: \"Download Audio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), recording ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Recording...\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Stop\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: recordingButtonClass,\n                      onClick: stopRecording,\n                      children: \"Stop Recording\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"recording-btn\",\n                  onClick: startRecording,\n                  type: \"button\",\n                  children: \"Start Recording\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), !recording && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setAudioURL(null),\n                  className: \"recording-btn\",\n                  children: \"Record Another\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), option1 === \"upload\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"choose-file-button\",\n                htmlFor: \"audio\",\n                children: \"Choose file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"audio\",\n                name: \"audio\",\n                accept: \"audio/*\",\n                onChange: handleAudioUpload,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), audioURL && /*#__PURE__*/_jsxDEV(AudioWaveform, {\n            fileUrl: audioURL,\n            setTime: setTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Artist:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              readOnly: true,\n              value: theme.map(th => myArray[th - 1].name).join(\", \"),\n              style: {\n                pointerEvents: \"none\"\n              },\n              name: \"artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Themes\",\n            children: myArray.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: theme.includes(item.id) ? \"gg\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                // key={item.id}\n                className: \"box\",\n                onClick: () => handleThemeClick(item.id),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.link,\n                  alt: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"titlet\",\n                  children: [\"Artist Name: \", item.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Option:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsgg\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: \"0\",\n              checked: option === \"0\",\n              onChange: handleOptionSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), \" \", \"Music\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: \"1\",\n              checked: option === \"1\",\n              onChange: handleOptionSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), \" \", \"Music + Theme\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: \"2\",\n              checked: option === \"2\",\n              onChange: handleOptionSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), \" \", \"Theme\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-group inline-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Theme:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              verticalAlign: \"middle\"\n            },\n            type: \"text\",\n            name: \"theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"inline-label\",\n            children: \"Upscale:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), \"   \", /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              verticalAlign: \"middle\"\n            },\n            type: \"checkbox\",\n            checked: upscale,\n            onChange: handleUpscaleCheckbox,\n            name: \"upscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"recording-btn\",\n          children: \"Create Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CameraPage, \"ZbQ73m9yFuv6LeMGH6Xl1uxdQDs=\");\n\n_c = CameraPage;\nexport default CameraPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"sources":["/Users/niteshsingh/Desktop/Voimo/frontend/src/pages/CameraPage.js"],"names":["React","useRef","useState","Sidenav","Backdrop","CircularProgress","artist","AudioWaveform","bufferToWav","cropBuffer","urlToBuffer","CameraPage","theme","setTheme","option","setOption","option1","setOption1","upscale","setUpscale","loading","setLoading","audioInputRef","handleThemeClick","selectedTheme","includes","filter","prev","handleradioButton","handleOptionSelect","event","selectedOption","target","value","handleUpscaleCheckbox","checked","myArray","recording","setRecording","audioURL","setAudioURL","mediaRecorder","setMediaRecorder","recordingButtonClass","setRecordingButtonClass","time","setTime","chunks","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","recorder","MediaRecorder","start","addEventListener","push","data","blob","Blob","file","File","type","dataTransfer","DataTransfer","items","add","fileList","files","current","url","URL","createObjectURL","catch","error","console","log","stopRecording","stop","downloadAudio","link","document","createElement","href","download","body","appendChild","click","handleAudioUpload","base_url","process","env","REACT_APP_API_URL","handleSubmit","preventDefault","formData","FormData","delete","buffer","croppedBuffer","wavBytes","wav","audioTemp","append","response","fetch","method","task","json","id","refreshId","setInterval","pair","headers","entries","clearInterval","filename","a","removeChild","display","height","map","th","name","join","pointerEvents","item","verticalAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./CameraPage.css\";\nimport Sidenav from \"./Sidenav\";\nimport { Backdrop } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport artist from \"../assests/Artists\";\nimport AudioWaveform from \"../components/AudioWave\";\nimport { bufferToWav, cropBuffer, urlToBuffer } from \"../assests/assist\";\nfunction CameraPage() {\n  const [theme, setTheme] = useState([]);\n  const [option, setOption] = useState(\"0\");\n  const [option1, setOption1] = useState(\"\");\n  const [upscale, setUpscale] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const audioInputRef = useRef(null);\n\n  const handleThemeClick = (selectedTheme) => {\n    if (theme.includes(selectedTheme))\n      setTheme(theme.filter((theme) => theme !== selectedTheme));\n    else setTheme((prev) => [...prev, selectedTheme]);\n  };\n  const handleradioButton = (option) => {\n    setOption1(option);\n  };\n\n  const handleOptionSelect = (event) => {\n    const selectedOption = event.target.value;\n    setOption(selectedOption);\n  };\n\n  const handleUpscaleCheckbox = (event) => {\n    const checked = event.target.checked;\n    setUpscale(checked);\n  };\n\n  var myArray = artist;\n\n  //audio recorder function\n  const [recording, setRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  // const [cropURL, setCroppedURL] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordingButtonClass, setRecordingButtonClass] =\n    useState(\"recording-button\");\n  const [time, setTime] = useState([0, 0]);\n\n  const chunks = [];\n  const startRecording = () => {\n    setAudioURL(null);\n    setRecordingButtonClass(\"recording-btn recording\");\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        const recorder = new MediaRecorder(stream);\n        recorder.start();\n        setRecording(true);\n        setMediaRecorder(recorder);\n\n        recorder.addEventListener(\"dataavailable\", (event) => {\n          chunks.push(event.data);\n        });\n\n        recorder.addEventListener(\"stop\", () => {\n          const blob = new Blob(chunks);\n          const file = new File([blob], \"recording.wav\", { type: \"audio/wav\" });\n          // audioInputRef.current.files = [file];\n          const dataTransfer = new DataTransfer();\n          dataTransfer.items.add(file);\n\n          const fileList = dataTransfer.files;\n          audioInputRef.current.files = fileList;\n          const url = URL.createObjectURL(blob);\n          setAudioURL(url);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n    mediaRecorder.stop();\n    setRecordingButtonClass(\"recording-btn\");\n  };\n\n  const downloadAudio = () => {\n    const link = document.createElement(\"a\");\n    link.href = audioURL;\n    link.download = \"recording.wav\";\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    const url = URL.createObjectURL(file);\n    setAudioURL(url);\n  };\n  console.log(time);\n  const base_url = process.env.REACT_APP_API_URL;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // prevent the default form submission behavior\n    const formData = new FormData(event.target); // get the form data\n    const url = `${base_url}/submit_form`; // replace this with your URL\n    formData.delete(\"audio\");\n    try {\n      const buffer = await urlToBuffer(audioURL);\n      const croppedBuffer = cropBuffer(buffer, time[0], time[1]);\n      const wavBytes = bufferToWav(croppedBuffer);\n      const wav = new Blob([wavBytes], { type: \"audio/wav\" });\n      const audioTemp = new File([wav], \"my-audio-file.wav\", {\n        type: \"audio/wav\",\n      });\n      console.log(audioTemp);\n      formData.append(\"audio\", audioTemp, \"temp.wav\");\n      setLoading(true);\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: formData,\n      });\n      const task = await response.json();\n      console.log(task);\n      const id = task.id;\n      console.log(id);\n      var refreshId = setInterval(async function () {\n        const url = `${base_url}/get_video/${id}`;\n        try {\n          const response = await fetch(url, { method: \"POST\" });\n          console.log(response);\n          for (var pair of response.headers.entries()) {\n            console.log(pair[0] + \": \" + pair[1]);\n            if (pair[1] === \"video/mp4\") {\n              // key I'm looking for in this instance\n              clearInterval(refreshId);\n              console.log(\"k\");\n              const filename = \"temp.mp4\";\n              const file = await response.blob();\n              const url = URL.createObjectURL(file);\n              const a = document.createElement(\"a\");\n              a.href = url;\n              a.download = filename;\n              document.body.appendChild(a);\n              a.click();\n              document.body.removeChild(a);\n              setLoading(false);\n            }\n          }\n          // if (response.headers.get(\"content-disposition\")) {\n          //   console.log(\"hi\");\n          // }\n          console.log(\"Night\");\n        } catch (error) {\n          clearInterval(refreshId);\n          setLoading(false);\n          console.log(error);\n        }\n      }, 60000);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(loading);\n\n  return (\n    <>\n      <Sidenav />\n      <div className=\"Form\">\n        <Backdrop open={loading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <div className=\"heading\">Create your own video</div>\n        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n          <div className=\"Form-group\">\n            <label>Record or Upload Audio:</label>\n            <div>\n              <div className=\"optionsgg\">\n                <input\n                  type=\"radio\"\n                  name=\"audioOption\"\n                  value=\"record\"\n                  onClick={() => handleradioButton(\"record\")}\n                />{\" \"}\n                Record\n                <input\n                  type=\"radio\"\n                  name=\"audioOption\"\n                  value=\"upload\"\n                  onClick={() => handleradioButton(\"upload\")}\n                />{\" \"}\n                Upload\n              </div>\n              {option1 === \"record\" && (\n                <div>\n                  {\" \"}\n                  <div>\n                    <label htmlFor=\"record\">Record Audio:</label>\n                    <input\n                      type=\"file\"\n                      id=\"audio\"\n                      name=\"audio\"\n                      accept=\"audio/*\"\n                      style={{ display: \"none\" }}\n                      ref={audioInputRef}\n                    />\n                    {audioURL && (\n                      <div style={{ height: 0 }}>\n                        <button\n                          onClick={downloadAudio}\n                          className=\"download-button\"\n                          type=\"button\"\n                        >\n                          Download Audio\n                        </button>\n                      </div>\n                    )}\n\n                    {recording ? (\n                      <div>\n                        Recording...\n                        <div className=\"Stop\">\n                          <button\n                            type=\"button\"\n                            className={recordingButtonClass}\n                            onClick={stopRecording}\n                          >\n                            Stop Recording\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <button\n                        className=\"recording-btn\"\n                        onClick={startRecording}\n                        type=\"button\"\n                      >\n                        Start Recording\n                      </button>\n                    )}\n                    {!recording && (\n                      <button\n                        type=\"button\"\n                        onClick={() => setAudioURL(null)}\n                        className=\"recording-btn\"\n                      >\n                        Record Another\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n              {option1 === \"upload\" && (\n                <div>\n                  <label className=\"choose-file-button\" htmlFor=\"audio\">\n                    Choose file\n                  </label>\n                  <input\n                    type=\"file\"\n                    id=\"audio\"\n                    name=\"audio\"\n                    accept=\"audio/*\"\n                    onChange={handleAudioUpload}\n                    style={{ display: \"none\" }}\n                  />\n                </div>\n              )}\n            </div>\n            {audioURL && <AudioWaveform fileUrl={audioURL} setTime={setTime} />}\n          </div>\n          <div className=\"Form-group\">\n            <div className=\"inline-flex\">\n              <label>Artist:</label>{\" \"}\n              <input\n                type=\"text\"\n                readOnly\n                value={theme.map((th) => myArray[th - 1].name).join(\", \")}\n                style={{ pointerEvents: \"none\" }}\n                name=\"artist\"\n              />\n            </div>\n            <div className=\"Themes\">\n              {myArray.map((item) => (\n                <div\n                  key={item.id}\n                  className={theme.includes(item.id) ? \"gg\" : \"\"}\n                >\n                  <div\n                    // key={item.id}\n                    className=\"box\"\n                    onClick={() => handleThemeClick(item.id)}\n                  >\n                    <img src={item.link} alt={item.name} />\n                    <div className=\"titlet\">Artist Name: {item.name}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"Form-group\">\n            <label>Option:</label>\n            <div className=\"optionsgg\">\n              <input\n                type=\"radio\"\n                name=\"option\"\n                value=\"0\"\n                checked={option === \"0\"}\n                onChange={handleOptionSelect}\n              />{\" \"}\n              Music\n              <input\n                type=\"radio\"\n                name=\"option\"\n                value=\"1\"\n                checked={option === \"1\"}\n                onChange={handleOptionSelect}\n              />{\" \"}\n              Music + Theme\n              <input\n                type=\"radio\"\n                name=\"option\"\n                value=\"2\"\n                checked={option === \"2\"}\n                onChange={handleOptionSelect}\n              />{\" \"}\n              Theme\n            </div>\n          </div>\n          <div className=\"Form-group inline-flex\">\n            <label>Theme:</label>\n            <input\n              style={{ verticalAlign: \"middle\" }}\n              type=\"text\"\n              name=\"theme\"\n            />\n          </div>\n          <div className=\"Form-group\">\n            <label className=\"inline-label\">Upscale:</label>\n            {\"   \"}\n            <input\n              style={{ verticalAlign: \"middle\" }}\n              type=\"checkbox\"\n              checked={upscale}\n              onChange={handleUpscaleCheckbox}\n              name=\"upscale\"\n            />\n          </div>\n          <button type=\"submit\" className=\"recording-btn\">\n            Create Video\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default CameraPage;\n"]},"metadata":{},"sourceType":"module"}